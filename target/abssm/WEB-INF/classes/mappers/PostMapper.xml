<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.simple.chat.dao.PostMapper">
    <resultMap id="postMap" type="post">
        <id property="id" column="id" javaType="int"/>
        <result property="date" column="date" javaType="Date"/>
        <result property="authorName" column="author_name" javaType="String"/>
        <result property="content" column="content" javaType="String"/>
        <result property="likes" column="likes" javaType="int"/>
        <result property="liked" column="liked" javaType="int"/>
        <collection property="commentList" column="commentList" ofType="comment">
            <result property="cDate" column="c_date" javaType="Date"/>
            <result property="cContent" column="c_content" javaType="String"/>
            <result property="cAuthorName" column="c_author_name" javaType="String"/>
        </collection>
    </resultMap>
    <select id="findList" resultMap="postMap">
        select * from posts left outer join comments on post_id = posts.id order by posts.date desc
    </select>
    <select id="postByUser" resultMap="postMap">
        select * from posts, comments where post_id = posts.id and posts.author_name = #{userName} order by posts.date desc
    </select>
    <insert id="insert" parameterType="post" useGeneratedKeys="true" keyProperty="id">
        insert into posts (date, author_name, content, liked) values (now(), #{authorName}, #{content}, 0);
    </insert>
    <delete id="delete">
        delete from posts where id = #{id}
    </delete>
    <update id="like">
        update posts set likes = IF(likes IS NULL, 1, likes+1) where id=#{id}
    </update>
    <update id="dislike">
        update posts set likes = IF(likes > 0, likes-1, 0) where id=#{id}
    </update>
    <update id="changeliked">
        update posts set liked = IF(liked = 0, 1, 0) where id=#{id}
    </update>
</mapper>